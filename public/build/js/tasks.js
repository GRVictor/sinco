!function(){!async function(){try{const n=`/api/tasks?url=${a()}`,s=await fetch(n),o=await s.json();t=o.tasks,e()}catch(t){console.log(t)}}();let t=[];function e(){if(function(){const t=document.querySelector("#task-list");for(;t.firstChild;)t.removeChild(t.firstChild)}(),0===t.length){const t=document.querySelector("#task-list"),e=document.createElement("LI");return e.textContent="No hay tareas en este proyecto",e.classList.add("no-tasks"),void t.appendChild(e)}const s={0:"Pendiente",1:"Completada"};t.forEach((o=>{const c=document.createElement("LI");c.dataset.taskId=o.id,c.classList.add("task");const d=document.createElement("P");d.textContent=o.name;const r=document.createElement("DIV");r.classList.add("options");const i=document.createElement("BUTTON");i.classList.add("status-task"),i.classList.add(`${s[o.status].toLowerCase()}`),i.textContent=s[o.status],i.dataset.status=o.status,i.ondblclick=function(){!function(s){const o=1===s.status?0:1;s.status=o,async function(s){const{id:o,name:c,status:d,projectId:r}=s,i=new FormData;i.append("id",o),i.append("name",c),i.append("status",d),i.append("projectId",r),i.append("url",a());try{const a="http://localhost:3000/api/tasks/update",s=await fetch(a,{method:"POST",body:i}),c=await s.json();"success"===c.response.type&&(n(c.response.message,c.response.type,document.querySelector(".container-new-task")),t=t.map((t=>(t.id===o&&(t.status=d),t))),e())}catch(t){console.log(t)}}(s)}({...o})};const l=document.createElement("BUTTON");l.classList.add("delete-task"),l.dataset.taskId=o.id,l.textContent="Eliminar",l.ondblclick=function(){!function(n){Swal.fire({title:"¿Estás seguro?",text:"Este cambio no se puede revertir",icon:"warning",showCancelButton:!0,confirmButtonColor:"#CFD2B2",cancelButtonColor:"#BF0603",confirmButtonText:"Si, eliminar",cancelButtonText:"Cancelar"}).then((s=>{s.isConfirmed&&async function(n){const{id:s,name:o,status:c}=n,d=new FormData;d.append("id",s),d.append("name",o),d.append("status",c),d.append("url",a());try{const n="http://localhost:3000/api/tasks/delete",a=await fetch(n,{method:"POST",body:d}),o=await a.json();o.result&&(Swal.fire("Tarea eliminada",o.message,"success"),t=t.filter((t=>t.id!==s)),e())}catch(t){console.log(t)}}(n)}))}({...o})},r.appendChild(i),r.appendChild(l),c.appendChild(d),c.appendChild(r);document.querySelector("#task-list").appendChild(c)}))}function n(t,e,n){const a=document.querySelector(".alert");a&&a.remove();const s=document.createElement("DIV");s.classList.add("alert",e),s.textContent=t,n.parentElement.insertBefore(s,n.nextElementSibling),setTimeout((()=>{s.remove()}),3e3)}function a(){return Object.fromEntries(new URLSearchParams(window.location.search)).url}document.querySelector("#add-task").addEventListener("click",(function(){const s=document.createElement("DIV");s.classList.add("modal"),s.innerHTML='\n            <form class="form new-task">\n                <legend>Agregar una tarea</legend>\n                <div class="field">\n                    <label for="task">Nombre de la tarea</label>\n                    <input type="text" id="task" name="task" placeholder="Ingresa el nombre de la tarea"/>\n                </div>\n\n                <div class="options">\n                    <input type="submit" class="submit-new-task" value="Aceptar"/>\n                    <button type="button" class="close-modal">Cancelar</button>\n                </div>\n\n            </form>\n            ',setTimeout((()=>{document.querySelector(".form").classList.add("animate")}),0),s.addEventListener("click",(o=>{if(o.preventDefault(),o.target.classList.contains("close-modal")){document.querySelector(".form").classList.add("close"),setTimeout((()=>{s.remove()}),500)}o.target.classList.contains("submit-new-task")&&function(){const s=document.querySelector("#task").value.trim();if(""===s)return void n("El nombre de la tarea es obligatorio","error",document.querySelector(".form legend"));!async function(s){const o=new FormData;o.append("name",s),o.append("projectId",a());try{const a="http://localhost:3000/api/tasks",c=await fetch(a,{method:"POST",body:o}),d=await c.json();if(n(d.message,d.type,document.querySelector(".form legend")),"success"===d.type){const n=document.querySelector(".modal");setTimeout((()=>{n.remove()}),1200);const a=d.task?{id:String(d.task.id),name:s,status:0,projectId:d.task.projectId}:{id:"",name:s,status:0,projectId:""};t=[...t,a],e()}}catch(t){console.log(t)}}(s)}()})),document.querySelector(".dashboard").appendChild(s)}))}();